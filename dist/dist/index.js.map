{"version":3,"sources":["../index.js"],"names":["_apiai","require","_apiai2","_interopRequireDefault","_botkit","_botkit2","_fs","_fs2","_htmlEntities","_http","_http2","_nodeUuid","_nodeUuid2","_querystring","_querystring2","_secrets","obj","__esModule","default","runWebServer","decoder","XmlEntities","devConfig","process","env","DEVELOPMENT_CONFIG","apiaiOptions","hostname","DEVELOPMENT_HOST","path","apiAiService","apiAiAccessToken","sessionIds","Map","controller","slackbot","debug","json_file_store","bot","spawn","token","slackBotKey","startRTM","numberOfSpots","playersInGame","numberOfChallengeSpots","gameInProgress","edInsults","isDefined","sendMessage","message","messageText","reply","err","hears","attachmentMessage","attachments","title","callback_id","attachment_type","actions","type","user","identity","id","text","indexOf","requestText","decode","replace","channel","botId","userId","has","set","v1","request","textRequest","sessionId","get","contexts","name","parameters","slack_user_id","slack_channel","on","response","result","responseText","fulfillment","speech","responseData","data","action","startGame","joinGame","challengeWinners","showLeaderboard","slack","resp","error","end","api","users","info","push","randomInsultIndex","Math","floor","random","length","setTimeout","arrayContains","shuffle","forEach","username","updateNumberOfGamesPlayed","storage","all","allUserData","leaderboardMessage","sortedUserArray","sortByKey","map","index","numberOfGamesPlayed","array","currentIndex","temporaryValue","randomIndex","userData","save","parseInt","toString","string","key","sort","a","b","x","y","readFileSync","createServer","method","processPost","writeHead","listen","callback","queryData","connection","destroy","post","parse"],"mappings":"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","file":"index.js","sourcesContent":["'use strict';\n\nvar _apiai = require('apiai');\n\nvar _apiai2 = _interopRequireDefault(_apiai);\n\nvar _botkit = require('botkit');\n\nvar _botkit2 = _interopRequireDefault(_botkit);\n\nvar _fs = require('fs');\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _htmlEntities = require('html-entities');\n\nvar _http = require('http');\n\nvar _http2 = _interopRequireDefault(_http);\n\nvar _nodeUuid = require('node-uuid');\n\nvar _nodeUuid2 = _interopRequireDefault(_nodeUuid);\n\nvar _querystring = require('querystring');\n\nvar _querystring2 = _interopRequireDefault(_querystring);\n\nvar _secrets = require('./secrets');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// start the web server\nrunWebServer();\n\nvar decoder = new _htmlEntities.XmlEntities();\n\nvar devConfig = process.env.DEVELOPMENT_CONFIG === 'true';\n\nvar apiaiOptions = {};\nif (devConfig) {\n  apiaiOptions.hostname = process.env.DEVELOPMENT_HOST;\n  apiaiOptions.path = '/api/query';\n}\n\nvar apiAiService = (0, _apiai2.default)(_secrets.apiAiAccessToken, apiaiOptions);\n\nvar sessionIds = new Map();\n\nvar controller = _botkit2.default.slackbot({\n  debug: false,\n  json_file_store: './slackbot_storage'\n  // include \"log: false\" to disable logging\n});\n\nvar bot = controller.spawn({\n  token: _secrets.slackBotKey\n}).startRTM();\n\n// Game variables\nvar numberOfSpots = 4;\nvar playersInGame = [];\nvar numberOfChallengeSpots = 2;\nvar gameInProgress = false;\nvar edInsults = ['@edwardvincent Are you sure that is wise? :flushed:', '@edwardvincent Are you sure? :flushed:', '@edwardvincent Really?!! :flushed:', '@edwardvincent When will you learn? :flushed:', '@edwardvincent It just makes me sad :cry:'];\n\n/**\n * Check if defined pollyfil\n * @param obj\n * @returns {boolean}\n */\nfunction isDefined(obj) {\n  if (typeof obj === 'undefined') {\n    return false;\n  }\n\n  if (!obj) {\n    return false;\n  }\n\n  return obj !== null;\n}\n\n/**\n * Generic function to send slack response\n * @param message - object to give the message context\n * @param messageText - text that will be sent\n */\nfunction sendMessage(message, messageText) {\n  try {\n    bot.reply(message, messageText);\n  } catch (err) {\n    bot.reply(message, err.message);\n  }\n}\n\n/**\n * Listen for direction messages and all mentions @foos-bot\n * Fire off the correct functions based on the type of request that was made\n */\ncontroller.hears(['.*'], ['direct_message', 'direct_mention', 'mention'], function (bot, message) {\n  try {\n    var attachmentMessage = {\n      attachments: [{\n        title: 'Do you want to interact with my buttons?',\n        callback_id: '123',\n        attachment_type: 'default',\n        actions: [{\n          'name': 'yes',\n          'text': 'Yes',\n          'value': 'yes',\n          'type': 'button'\n        }, {\n          'name': 'no',\n          'text': 'No',\n          'value': 'no',\n          'type': 'button'\n        }]\n      }]\n    };\n    sendMessage(message, attachmentMessage);\n\n    if (message.type === 'message') {\n      if (message.user === bot.identity.id) {\n        // message from bot can be skipped\n      } else if (message.text.indexOf('<@U') === 0 && message.text.indexOf(bot.identity.id) === -1) {\n        // skip other users direct mentions\n      } else {\n        var requestText = decoder.decode(message.text);\n        requestText = requestText.replace('’', '\\'');\n\n        var channel = message.channel;\n        var botId = '<@' + bot.identity.id + '>';\n        var userId = message.user;\n\n        if (requestText.indexOf(botId) > -1) {\n          requestText = requestText.replace(botId, '');\n        }\n\n        if (!sessionIds.has(channel)) {\n          sessionIds.set(channel, _nodeUuid2.default.v1());\n        }\n\n        var request = apiAiService.textRequest(requestText, {\n          sessionId: sessionIds.get(channel),\n          contexts: [{\n            name: 'generic',\n            parameters: {\n              slack_user_id: userId,\n              slack_channel: channel\n            }\n          }]\n        });\n\n        request.on('response', function (response) {\n          if (isDefined(response.result)) {\n            var responseText = response.result.fulfillment.speech;\n            var responseData = response.result.fulfillment.data;\n            var action = response.result.action;\n\n            if (action === 'start_game' || action === 'join_current_game') {\n              // start a new game if there isn't one in progress\n              if (!gameInProgress) {\n                startGame(message, responseText);\n              } else {\n                // Join the current game if there is one in progress\n                joinGame(message, responseText);\n              }\n            } else if (action === 'challenge_winners') {\n              // challenge the winners of the last game\n              challengeWinners(message, responseText);\n            } else if (action === 'show_leaderboard') {\n              // show who has played the most games\n              showLeaderboard(message, responseText);\n            } else if (action === 'check_number_of_players_in_game') {\n              // check the number of spots remaining\n              sendMessage(message, 'There are ' + numberOfSpots + ' remaining...');\n            } else if (action === 'get_help') {\n              sendMessage(message, responseText);\n            } else if (isDefined(responseData) && isDefined(responseData.slack)) {\n              try {\n                bot.reply(message, responseData.slack);\n              } catch (err) {\n                bot.reply(message, err.message);\n              }\n            } else if (isDefined(responseText)) {\n              bot.reply(message, responseText, function (err, resp) {\n                if (err) {}\n              });\n            }\n          }\n        });\n\n        request.on('error', function (error) {\n          return void 0;\n        });\n        request.end();\n      }\n    }\n  } catch (err) {}\n});\n\n/**\n * Starts a new game\n * @param message\n * @param responseText\n */\nfunction startGame(message, responseText) {\n  gameInProgress = true;\n  numberOfSpots = 3;\n  numberOfChallengeSpots = 2;\n  playersInGame = [];\n  sendMessage(message, responseText);\n\n  // Add the person who sent the message to the game\n  bot.api.users.info({ user: message.user }, function (error, response) {\n    if (error) {}\n    playersInGame.push(response.user.name);\n\n    // If user is ed mock him a little\n    if (response.user.name === 'edwardvincent') {\n      var randomInsultIndex = Math.floor(Math.random() * edInsults.length);\n      sendMessage(message, edInsults[randomInsultIndex]);\n    }\n  });\n\n  // Start the timer - games only last 5 mins\n  setTimeout(function () {\n    // let users know that time is running out\n    if (numberOfSpots > 0) {\n      sendMessage(message, '30 seconds to go and we need ' + numberOfSpots + ' more players... :timer_clock: :timer_clock:');\n    }\n    // close game if its been 5 mins and we didn't get enough players\n    setTimeout(function () {\n      if (gameInProgress) {\n        gameInProgress = false;\n        playersInGame = [];\n        sendMessage(message, 'Game closed before we got enough players :cry:');\n      }\n    }, 30000);\n  }, 270000);\n}\n\n/**\n * Join an existing game\n * @param message\n * @param responseText\n */\nfunction joinGame(message, responseText) {\n  bot.api.users.info({ user: message.user }, function (error, response) {\n    if (error) {}\n    // Don't let a user join the same game twice\n    if (arrayContains(response.user.name, playersInGame)) {\n      sendMessage(message, 'You are already in the game. You can\\'t join twice. :no_entry_sign:');\n    } else {\n      numberOfSpots--;\n      playersInGame.push(response.user.name);\n      if (numberOfSpots > 1) {\n        sendMessage(message, numberOfSpots + ' more spots to go... :timer_clock:');\n      } else if (numberOfSpots === 1) {\n        sendMessage(message, numberOfSpots + ' more spot to go! Ahhhhh!!! :scream_cat:');\n      } else if (numberOfSpots === 0) {\n        sendMessage(message, 'Awesome! All spots are filled! :+1:');\n        // Wait 30 seconds before allowing a new game to start so that we can catch users who were too slow\n        setTimeout(function () {\n          if (gameInProgress) {\n            gameInProgress = false;\n          }\n        }, 30000);\n        shuffle(playersInGame);\n        sendMessage(message, 'Here is a random team assignment if you would like to use it?');\n        sendMessage(message, ':foos: _' + playersInGame[0] + '_ *&* _' + playersInGame[1] + '_');\n        sendMessage(message, ':vs:');\n        sendMessage(message, ':foos: _' + playersInGame[2] + '_ *&* _' + playersInGame[3] + '_');\n        // Save the number of games played to the local db\n        playersInGame.forEach(function (username) {\n          updateNumberOfGamesPlayed(username);\n        });\n      } else {\n        sendMessage(message, ':no_good: too slow! :turtle:');\n      }\n    }\n  });\n}\n\n/**\n * Challenge the winners of the current game\n * @param message\n * @param responseText\n */\nfunction challengeWinners(message, responseText) {\n  if (gameInProgress) {\n    if (numberOfSpots !== 0) {\n      sendMessage(message, 'There is still space in the current game. Please join that instead of trying to challenge.');\n    } else if (numberOfChallengeSpots === 0) {\n      sendMessage(message, 'Sorry, we already have 2 challengers');\n    } else {\n      numberOfChallengeSpots--;\n      sendMessage(message, 'Ok great, you are in for the next game!');\n    }\n  } else {\n    sendMessage(message, 'Sorry there is no game in progress for you to challenge. Please be faster next time. The ability to challenge expires 30 seconds after the game is full');\n  }\n}\n\n/**\n * Fetches the stats around number of games played, sorts it and returns it as a message\n * @param message\n * @param responseText\n */\nfunction showLeaderboard(message, responseText) {\n  controller.storage.users.all(function (error, allUserData) {\n    if (error) {}\n    var leaderboardMessage = '';\n    var sortedUserArray = sortByKey(allUserData, 'numberOfGamesPlayed');\n    sortedUserArray.map(function (user, index) {\n      leaderboardMessage += index + 1 + ') ' + user.id + ' *' + user.numberOfGamesPlayed + '* \\n';\n    });\n    sendMessage(message, leaderboardMessage);\n  });\n}\n\n/**\n * Shuffles an array\n * @param array\n * @returns {*}\n */\nfunction shuffle(array) {\n  var currentIndex = array.length;\n  var temporaryValue = void 0;\n  var randomIndex = void 0;\n\n  // While there remain elements to shuffle...\n  while (currentIndex !== 0) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\n/**\n * Saves the number of games played to a local db\n * @param username\n */\nfunction updateNumberOfGamesPlayed(username) {\n  controller.storage.users.get(username, function (error, userData) {\n    if (error) {}\n    if (userData) {\n      controller.storage.users.save({\n        id: username,\n        numberOfGamesPlayed: (parseInt(userData.numberOfGamesPlayed, 10) + 1).toString()\n      }, function (err) {\n        if (err) {}\n      });\n    } else {\n      controller.storage.users.save({ id: username, numberOfGamesPlayed: 1 }, function (err) {\n        if (err) {}\n      });\n    }\n  });\n}\n\n/**\n * Check if a string is in an array\n * @param string\n * @param array\n * @returns {boolean}\n */\nfunction arrayContains(string, array) {\n  return array.indexOf(string) > -1;\n}\n\n/**\n * Sort array (leaderboard) by key\n * @param array\n * @param key\n * @returns {Array.<T>}\n */\nfunction sortByKey(array, key) {\n  return array.sort(function (a, b) {\n    var x = parseInt(a[key]);\n    var y = parseInt(b[key]);\n    return x > y ? -1 : x < y ? 1 : 0;\n  });\n}\n\nfunction runWebServer() {\n  var index = _fs2.default.readFileSync('index.html');\n\n  _http2.default.createServer(function (request, response) {\n    if (request.method === 'POST') {\n      processPost(request, response, function () {\n        // Use request.post here\n        response.writeHead(200, 'OK', { 'Content-Type': 'text/plain' });\n        response.end();\n      });\n    } else {\n      response.writeHead(200, 'OK', { 'Content-Type': 'text/plain' });\n      response.end(index);\n    }\n  }).listen(9615);\n}\n\nfunction processPost(request, response, callback) {\n  var queryData = '';\n  if (typeof callback !== 'function') return null;\n\n  if (request.method === 'POST') {\n    request.on('data', function (data) {\n      queryData += data;\n      if (queryData.length > 1e6) {\n        queryData = '';\n        response.writeHead(413, { 'Content-Type': 'text/plain' }).end();\n        request.connection.destroy();\n      }\n    });\n\n    request.on('end', function () {\n      request.post = _querystring2.default.parse(queryData);\n      callback();\n    });\n  } else {\n    response.writeHead(405, { 'Content-Type': 'text/plain' });\n    response.end();\n  }\n}\n//# sourceMappingURL=index.js.map"]}